Last login: Fri May  9 10:39:59 on ttys000
victor@MacBook-Air-46 ~ % cd ~/AI-Random-KeyStudy

victor@MacBook-Air-46 AI-Random-KeyStudy % mkdir traditional_keys && cd traditional_keys

victor@MacBook-Air-46 traditional_keys % nano generate_traditional_keys.py

victor@MacBook-Air-46 traditional_keys % python3 generate_traditional_keys.py

Traceback (most recent call last):
  File "/Users/victor/AI-Random-KeyStudy/traditional_keys/generate_traditional_keys.py", line 43, in <module>
    bitstring = to_binary_string(subkeys)
  File "/Users/victor/AI-Random-KeyStudy/traditional_keys/generate_traditional_keys.py", line 19, in to_binary_string
    return ''.join(subkeys)
           ~~~~~~~^^^^^^^^^
TypeError: sequence item 0: expected str instance, list found
victor@MacBook-Air-46 traditional_keys % nano generate_traditional_keys.py

victor@MacBook-Air-46 traditional_keys % rm generate_traditional_keys.py

victor@MacBook-Air-46 traditional_keys % nano generate_traditional_keys.py


  UW PICO 5.09           File: generate_traditional_keys.py           Modified  

            repeat_times = (stream_length + len(bitstring) - 1) // len(bitstrin$
            stream = (bitstring * repeat_times)[:stream_length]
            f.write(stream + "\n")
    print(f"âœ… Saved {num_streams} sequences to {filename}")

# -- Define your 128-bit user key here --
user_key_subblocks = [1, 2, 3, 4, 5, 6, 7, 8]
user_key_bits = ''.join(f'{block:016b}' for block in user_key_subblocks)
user_key_bits = list(user_key_bits)
        
subkeys = generate_idea_key_schedule(user_key_bits)
bitstring = to_binary_string(subkeys)
write_nist_format(bitstring, "traditional_key.txt")
    





                            [ Unknown Command: ^S ]                             
^G Get Help  ^O WriteOut  ^R Read File ^Y Prev Pg   ^K Cut Text  ^C Cur Pos   
^X Exit      ^J Justify   ^W Where is  ^V Next Pg   ^U UnCut Text^T To Spell  
